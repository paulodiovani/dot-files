# Default config for sway
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu swaymsg exec -- wofi --insensitive --allow-images --show drun
set $lockcmd swaylock -f

### Output configuration
set $primary-output HDMI-A-1
set $secondary-output eDP-1

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/Pictures/Wallpapers/Othercide-wallpaper-001.jpg fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output $secondary-output scale 1.25
output $secondary-output resolution 1920x1080 position 0 216
output $primary-output resolution 1920x1080 position 1536 0

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
  timeout 300 'swaymsg exec \$lockcmd' \
  timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaymsg exec \$lockcmd'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:keyboard {
  xkb_layout us
  xkb_variant intl
}

input type:touchpad {
  tap enabled
  middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Insert exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    # bindsym --release Super_L exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Lock screen
    bindsym $mod+Alt+l exec $lockcmd

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec wlogout -p layer-shell

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Attach workspaces to outputs
    workspace 0 output $secondary-output
    workspace 1 output $primary-output
    workspace 2 output $primary-output
    workspace 3 output $primary-output
    workspace 4 output $primary-output
    workspace 5 output $primary-output
    workspace 6 output $primary-output
    workspace 7 output $primary-output
    workspace 8 output $primary-output
    workspace 9 output $primary-output

    # Switch to workspace
    bindsym $mod+0 workspace number 0
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9

    bindsym Ctrl+Alt+$right workspace next
    bindsym Ctrl+Alt+$left workspace prev
    bindsym Ctrl+Alt+Right workspace next
    bindsym Ctrl+Alt+Left workspace prev

    # Move focused container to workspace
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9

    bindsym Ctrl+Alt+Shift+$right move container to workspace next, workspace next
    bindsym Ctrl+Alt+Shift+$left move container to workspace prev, workspace prev
    bindsym Ctrl+Alt+Shift+Right move container to workspace next, workspace next
    bindsym Ctrl+Alt+Shift+Left move container to workspace prev, workspace prev
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Special keys
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +2%
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -2%
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 2%-
    bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set 2%+
    bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
    bindsym XF86AudioNext exec --no-startup-id playerctl next
    bindsym XF86AudioPrev exec --no-startup-id playerctl previous
    bindsym XF86Search exec $menu

    # Toggle control center
    bindsym $mod+n exec swaync-client -t -sw

    # Dropdown terminal
    set $ddterm-id alacritty-dropdown
    set $ddterm alacritty --class $ddterm-id
    for_window [app_id="$ddterm-id"] move container to scratchpad
    exec $ddterm
    bindsym Ctrl+Escape scratchpad show, \
      resize set 100ppt 40ppt, \
      move position 0 0

    # Show clipboard
    bindsym Ctrl+F1 exec clipman pick -t wofi --histpath="~/.cache/clipman.json"

    # Show emoji selector
    bindsym Ctrl+F2 exec emote

    # Screenshots
    set $screenshot ${HOME}/Pictures/Screenshots/$(date +%Y-%m-%d_%H-%M-%S).png
    set $grimshot /usr/share/sway/scripts/grimshot
    set $grimcolor grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | awk -F ' ' 'NR==2 {print $3}' | tr -d '\n'
    # take screenshot of currently focused output
    bindsym --release Print exec IMG="$screenshot" && $grimshot --notify save output $IMG && wl-copy < $IMG
    # take screenshot of active window
    bindsym $mod+Print exec IMG="$screenshot" && $grimshot --notify save active $IMG && sl-copy < $IMG
    # take screenshot of selected window
    bindsym Ctrl+Print exec IMG="$screenshot" && $grimshot --notify save window $IMG && sl-copy < $IMG
    # take screenshot of rectangular are
    bindsym Shift+Print exec IMG="$screenshot" && $grimshot --notify save area $IMG && wl-copy < $IMG
    # copy selected color to clipboard
    bindsym Alt+Print exec $grimcolor | wl-copy


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

# Use Waybar as status
bar swaybar_command waybar

#
# Window configuration
#
default_border pixel 1
default_floating_border normal 1

# Inhibit idle when fullscreen
for_window [class="^.*"] inhibit_idle fullscreen
for_window [app_id="^.*"] inhibit_idle fullscreen
# Inhibit idle when zoom window is visible
for_window [class="^zoom$"] inhibit_idle visible

# Move windows on open
for_window [title="^Calendar$"] floating enable, exec ~/.local/bin/sway_move top-center
for_window [title="^GlobalProtect$"] floating enable, exec ~/.local/bin/sway_move top-right
# Fix Zoom s*it notifications
for_window [title="^(Z|z)oom$"] floating enable
for_window [title="^Zoom (.*)(Account|Meeting)$"] floating disable

#
# Startup commands and apps
#

# Change split layout (v/h) depending on window size
# https://github.com/nwg-piotr/autotiling
exec autotiling

# Update dbus with wayland/sway env vars (required for screen share/record to xdg-desktop-portal)
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# Notification Daemon
exec swaync

# Clipboard manager <Ctrl>F1
exec wl-paste -n -t text --watch clipman store --histpath="~/.cache/clipman.json" >> /tmp/clipman-log.txt 2>&1 &

# Emoji selector daemon <Ctrl>F1
exec emote

include ~/.config/sway/config.d/*
